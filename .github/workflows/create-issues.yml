name: Create Issues | Importer Issue Ops
on:
  workflow_dispatch:
  workflow_call:

env:
  GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  GITHUB_INSTANCE_URL: ${{ vars.SHELF_INSTANCE_URL}}
  BAMBOO_ACCESS_TOKEN: ${{ secrets.BAMBOO_ACCESS_TOKEN }} 
  BAMBOO_INSTANCE_URL: ${{ vars.BAMBOO_INSTANCE_URL }}   
jobs:
  get-plans:
    outputs:
      plan-list: ${{ steps.plan-list.outputs.plan-list }}
    runs-on: ubuntu-latest
    steps:
      - name: Install XML Startlet
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet
      - name: GET All Plans | Bamboo
        id: plan-list
        run: |
          response=$(curl -X GET "${{ env.BAMBOO_INSTANCE_URL }}/rest/api/latest/plan" \
                          -H "Authorization: Bearer ${{ env.BAMBOO_ACCESS_TOKEN }}")
          # Guardar la respuesta en un archivo temporal
          echo "$response" > plans.xml
          # Extraer las claves <key> y guardarlas en un archivo JSON
          xmlstarlet sel -t -m "//planKey/key" -v . -n plans.xml | jq -R -s 'split("\n")[:-1]' > plans.json
          # Mostrar el contenido del archivo JSON
          list=$(cat plans.json | tr -d '[:space:]' | sed ':a;N;$!ba;s/\n//g')
          echo "plan-list=$list" >> $GITHUB_OUTPUT
  create-issue:
    runs-on: ubuntu-latest
    needs: get-plans
    strategy:
      matrix:
        # plan-list: ${{ needs.get-plans.outputs.plan-list}}
        plan-list: ${{fromJson(needs.get-plans.outputs.plan-list)}} 
    steps:
      - name: Checkout REPO-LIST
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/importer-issue-ops
          token: ${{ secrets.GITHUB_TOKEN }}
          path: importer-issue-ops
          ref: main
          sparse-checkout: |
            .github/ISSUE_TEMPLATE/bamboo.md
      - name: Replace values in template
        working-directory: importer-issue-ops/.github/ISSUE_TEMPLATE
        run: |
          sed -i 's/_Replace this text with the Bamboo plan slug (e.g. PAN-SLUG) to migrate pipelines from._/${{ matrix.plan-list}}/g' bamboo.md
          issueTemplate=$(cat bamboo.md)
          cat $issueTemplate
      - name: Create Issue in Github
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ env.GITHUB_ACCESS_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository_owner }}/importer-issue-ops/issues \
          -d '{"title":"Plan: ${{matrix.plan-list}}","body":"$issueTemplate","labels":["bamboo"]}'
                  
        
 
 