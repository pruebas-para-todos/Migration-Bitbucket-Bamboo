name: Auto Migrate Plans
permissions: write-all
on:
  workflow_dispatch:
        inputs:
            migration_type:
                type: choice
                required: true
                options: 
                    - dry-run
                    - migrate
                description: "The migration type"
            build_plan_slug:
                type: string
                required: false
                description: "<projectKey>-<planKey>. Leave blank to perform all"
                default: <projectKey>-<planKey>
            target_repo_url:
                type: string
                required: true
                description: "The url of the target repo"
                default: https://github.com/pruebas-para-todos/target-repository
            output_directory:
                type: string
                required: true
                description: "can view the logs of the dry run and the converted workflow files in the specified output directory."
                default: tmp/output/

env:
  GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  GITHUB_INSTANCE_URL: ${{ vars.SHELF_INSTANCE_URL}}
  BAMBOO_ACCESS_TOKEN: ${{ secrets.BAMBOO_ACCESS_TOKEN }} 
  BAMBOO_INSTANCE_URL: ${{ vars.BAMBOO_INSTANCE_URL }}   
jobs:
  get-plans:
    outputs:
      plan-list: ${{ steps.plan-list.outputs.plan-list }}
    runs-on: ubuntu-latest
    steps:
      - name: Install XML Startlet
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet
      - name: GET All Plans | Bamboo
        id: plan-list
        run: |
          if [ -n "${{ inputs.build_plan_slug }}" ]; then
            response=$(curl -X GET "${{ env.BAMBOO_INSTANCE_URL }}/rest/api/latest/plan" \
                            -H "Authorization: Bearer ${{ env.BAMBOO_ACCESS_TOKEN }}")
            # Guardar la respuesta en un archivo temporal
            echo "$response" > plans.xml
            # Extraer las claves <key> y guardarlas en un archivo JSON
            xmlstarlet sel -t -m "//planKey/key" -v . -n plans.xml | jq -R -s 'split("\n")[:-1]' > plans.json
            # Mostrar el contenido del archivo JSON
            list=$(cat plans.json | tr -d '[:space:]' | sed ':a;N;$!ba;s/\n//g')
            echo "plan-list=$list" >> $GITHUB_OUTPUT
          else
            list=["${{inputs.build_plan_slug}}"]
            echo "plan-list=$list" >> $GITHUB_OUTPUT
          fi
  perform-migration:
    needs: get-plans
    strategy:
      matrix:
        # plan-list: ${{ needs.get-plans.outputs.plan-list}}
        plan-list: ${{fromJson(needs.get-plans.outputs.plan-list)}} 
    uses: pruebas-para-todos/Migration-Bitbucket-Bamboo/.github/workflows/single-plan.yml@main
    secrets: inherit
    with:
        migration_type: ${{inputs.migration_type}}
        build_plan_slug: ${{ matrix.plan-list }}
        target_repo_url: ${{ inputs.target_repo_url }}
        output_directory: ${{ inputs.output_directory }}

    